drop schema if exists HOSPITAL;

create schema HOSPITAL;

use HOSPITAL;

CREATE TABLE `hospital_enums` (
  `ENUM_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `ENUM_GROUP` varchar(255) DEFAULT NULL,
  `ENUM_VALUE` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ENUM_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;


insert into hospital_enums values(1,'module','module_admin');
insert into hospital_enums values(2,'module','module_employee');
insert into hospital_enums values(3,'module','module_patient');




CREATE TABLE USERS (
USERNAME VARCHAR(10) NOT NULL,
PASSWORD VARCHAR(32) NOT NULL,
ENABLED SMALLINT,
PRIMARY KEY (USERNAME)
);

CREATE TABLE AUTHORITIES (
USERNAME VARCHAR(10) NOT NULL,
AUTHORITY VARCHAR(10) NOT NULL,
FOREIGN KEY (USERNAME) REFERENCES USERS(USERNAME)
);

INSERT INTO USERS(USERNAME, PASSWORD, ENABLED) VALUES ('admin','admin',1);

INSERT INTO authorities(username, authority) VALUES ('admin', 'ADMIN_USER');
INSERT INTO authorities(username, authority) VALUES ('admin', 'GUEST_USER');


CREATE TABLE HOSP_ENUMS(
	ENUM_ID INT PRIMARY KEY,
    ENUM_GROUP TEXT(100),
    ENUM_VALUE TEXT(200)
);

INSERT INTO HOSP_ENUMS (ENUM_ID, ENUM_GROUP, ENUM_VALUE) VALUES(1,'CITY', 'Bareilly');
INSERT INTO HOSP_ENUMS (ENUM_ID, ENUM_GROUP, ENUM_VALUE) VALUES(2,'CITY', 'Mumbai');
INSERT INTO HOSP_ENUMS (ENUM_ID, ENUM_GROUP, ENUM_VALUE) VALUES(3,'CITY', 'Pune');
INSERT INTO HOSP_ENUMS (ENUM_ID, ENUM_GROUP, ENUM_VALUE) VALUES(4,'CITY', 'Banglore');
INSERT INTO HOSP_ENUMS (ENUM_ID, ENUM_GROUP, ENUM_VALUE) VALUES(5,'CITY', 'Very long city name for testing');

-- departments in hospital

INSERT INTO HOSP_ENUMS (ENUM_ID, ENUM_GROUP, ENUM_VALUE) VALUES(101,'DEPARTMENT', 'OPD');


CREATE TABLE ADDRESSES(
	ADDRESS_ID INT PRIMARY KEY AUTO_INCREMENT,
    APARTMENT TEXT(200),
    STREET TEXT(200),
    AREA TEXT(200),
    CITY INT,
    FOREIGN KEY (CITY) REFERENCES HOSP_ENUMS(ENUM_ID) 
);


CREATE TABLE PATIENTS(
	PATIENT_ID INT PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME TEXT(150),
    LAST_NAME TEXT(150),
    GENDER TEXT(6),
    DOB Date,
    EMAIL TEXT(200),
    MOBILE TEXT(10),
    PHONE TEXT(15),
    ADDRESS_ID INT,
    FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESSES(ADDRESS_ID)
);

CREATE TABLE BILLABLE_ITEMS(
	ITEM_ID INT PRIMARY KEY,
    DESCRIPTION TEXT(300),
	COST DOUBLE(10,2),
    COMMENTS TEXT(500),
    IS_ACTIVE CHAR(1) DEFAULT 'Y'
);

INSERT INTO BILLABLE_ITEMS(ITEM_ID,DESCRIPTION,COST,COMMENTS)VALUES(1,'Senior Doctor Fee',500,'Fee for Senior Doctor');
INSERT INTO BILLABLE_ITEMS(ITEM_ID,DESCRIPTION,COST,COMMENTS)VALUES(2,'Dressing - Minor',150,'Mior Dressing');
INSERT INTO BILLABLE_ITEMS(ITEM_ID,DESCRIPTION,COST,COMMENTS)VALUES(3,'Dressing - Major',250,'Major Dressing');

INSERT INTO BILLABLE_ITEM(BILLABLE_ITEM_ID,ITEM_NAME,COMMENTS,COST,DESCRIPTION,ENABLED)
VALUES(1, 'Dressing - Major','Major dressing', 150, 'Major Dressing description', true);
INSERT INTO BILLABLE_ITEM(BILLABLE_ITEM_ID,ITEM_NAME,COMMENTS,COST,DESCRIPTION,ENABLED)
VALUES(2, 'Fee - Senior Doctor','Fee for Senior Doctor Consultation', 500, 'Senior Doctor fee', true);


select * from patients;

select * from addresses;

select * from BILLABLE_ITEMS;