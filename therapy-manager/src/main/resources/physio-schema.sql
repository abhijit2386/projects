-- CREATE SCHEMA `physio` ;

DROP TABLE IF EXISTS ASSESMENTS;
DROP TABLE IF EXISTS ADDRESSES;
DROP TABLE IF EXISTS PATIENTS;

CREATE TABLE ADDRESSES(
	ADDRESS_ID INT PRIMARY KEY AUTO_INCREMENT,
    APARTMENT VARCHAR(255),
    STREET VARCHAR(255),
    AREA VARCHAR(255),
    CITY VARCHAR(255)
);

create table PATIENTS(
	PATIENT_ID INT PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME VARCHAR(120),
    LAST_NAME VARCHAR(120),
    GENDER VARCHAR(6),
    DATE_OF_BIRTH DATE,
    BLOOD_GROUP VARCHAR(4),
    EXISTING_AILMENTS VARCHAR(255),
    ALLERGIES VARCHAR(255),
    MOBILE VARCHAR(10),
    EMAIL VARCHAR(150),
    OCCUPATION VARCHAR(255),
	ADDRESS_ID INT,
    FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESSES(ADDRESS_ID)
);


select * from ADDRESSES;
select * from PATIENTS;
select * from PATIENTS where patient_Id = 1 or first_Name = 'asdf';


CREATE TABLE HOSPITAL_ENUMS(
	ENUM_ID INT PRIMARY KEY,
    ENUM_GROUP VARCHAR(100),
    ENUM_VALUE VARCHAR(200),
	UNIQUE(ENUM_GROUP,ENUM_VALUE)
);

DELETE FROM HOSPITAL_ENUMS WHERE ENUM_GROUP LIKE 'BLOOD_GROUP';

INSERT INTO HOSPITAL_ENUMS VALUES(1, 'BLOOD_GROUP', 'A+');
INSERT INTO HOSPITAL_ENUMS VALUES(2, 'BLOOD_GROUP', 'O+');
INSERT INTO HOSPITAL_ENUMS VALUES(3, 'BLOOD_GROUP', 'B+');
INSERT INTO HOSPITAL_ENUMS VALUES(4, 'BLOOD_GROUP', 'AB+');
INSERT INTO HOSPITAL_ENUMS VALUES(5, 'BLOOD_GROUP', 'A-');
INSERT INTO HOSPITAL_ENUMS VALUES(6, 'BLOOD_GROUP', 'O-');
INSERT INTO HOSPITAL_ENUMS VALUES(7, 'BLOOD_GROUP', 'B-');
INSERT INTO HOSPITAL_ENUMS VALUES(8, 'BLOOD_GROUP', 'AB-');


SELECT * FROM HOSPITAL_ENUMS;

CREATE TABLE PRESCRIPTIONS(
	PRESCRIPTION_ID INT PRIMARY KEY AUTO_INCREMENT,
    PATIENT_ID INT,
    SYMPTOMS TEXT,
    TREATMENT TEXT,
    MEDICAL_TESTS TEXT,
    COMMENTS TEXT,
    CREATED_TIMESTAMP DATETIME,
    FOREIGN KEY (PATIENT_ID) REFERENCES PATIENTS(PATIENT_ID)
);

CREATE TABLE TREATMENTS(
	TREATMENT_ID INT PRIMARY KEY,
    TREATMENT_NAME VARCHAR(255),
    FEE DOUBLE(6, 2)
);

delete from Treatments where TREATMENT_ID < 10000;

INSERT INTO TREATMENTS values(1, 'Consultation + Examination', 400.00);
INSERT INTO TREATMENTS values(2, 'Consultation + Examination + Therapy Day 1', 600.00);
INSERT INTO TREATMENTS values(3, 'Short case - 10 Sessions', 3500.00);
INSERT INTO TREATMENTS values(4, 'Short case follow-up', 500.00);
INSERT INTO TREATMENTS values(5, 'Long case - 10 Sessions', 4800.00);
INSERT INTO TREATMENTS values(6, 'Long case follow-up', 500.00);

select * from treatments;
SELECT TREATMENT_ID, TREATMENT_NAME,FEE FROM TREATMENTS ORDER BY TREATcMENT_NAME ASC;

CREATE TABLE ASSESMENTS(
	ASSESMENT_ID INT PRIMARY KEY AUTO_INCREMENT,
    PATIENT_ID INT,
    PRESENT_CONDITION VARCHAR(255),
    ONSET VARCHAR(255),
    DURATION VARCHAR(255),
    SURGICAL_HISTORY VARCHAR(255),
    RED_FLAG VARCHAR(255),
    PHYSIOTHREAPY_TREATMENT_HISTORY  VARCHAR(255),
    CURRENT_EXERCISES VARCHAR(255),
    HOBBIES_AND_SPORTS VARCHAR(255),
    FAMILY_HISTORY VARCHAR(255),
    SWELLING VARCHAR(255),
    AREA_OF_PAIN VARCHAR(255),
    DEFORMITY VARCHAR(255),
    GAIT VARCHAR(255),
	BUILT VARCHAR(255),
    WARMTH VARCHAR(255),
    MUSCLE_SPASM VARCHAR(255),
    TENDERNESS VARCHAR(255),
    VAS_SCALE VARCHAR(255),
    AGGRIVATING_FACTORS VARCHAR(255),
    ROM VARCHAR(255),
    END_FEEL VARCHAR(255),
    MMT VARCHAR(255),
    SPECIAL_TESTS VARCHAR(255),
    NEUROLOGICAL VARCHAR(255),
    CARDIORESPIRATORY VARCHAR(255),
    FUNCTIONAL_ASSESMENT VARCHAR(255),
    WELLNESS_ASSESMENT VARCHAR(255),
    RECOVERY_POTENTIAL VARCHAR(255),
    THERAPY_PLAN VARCHAR(255),
    IS_ACTIVE VARCHAR(1) DEFAULT 'Y',
    CREATED_DATE DATETIME DEFAULT NOW(),
    UPDATED_DATE DATETIME DEFAULT NOW(),
    FOREIGN KEY (PATIENT_ID) REFERENCES PATIENTS(PATIENT_ID)
);

SELECT * FROM ASSESMENTS where patient_id=7;


CREATE TABLE SITTINGS(
	SITTING_ID INT PRIMARY KEY AUTO_INCREMENT,
    ASSESMENT_ID INT,
    TREATMENT VARCHAR(255),
    FEE DOUBLE(6, 2),
	CREATED_DATE DATETIME DEFAULT NOW(),
    UPDATED_DATE DATETIME DEFAULT NOW(),
	FOREIGN KEY (ASSESMENT_ID) REFERENCES ASSESMENTS(ASSESMENT_ID)
);

-- drop table sittings;

SELECT SITTING_ID,ASSESMENT_ID,TREATMENT,FEE,CREATED_DATE FROM SITTINGS;
 -- WHERE ASSESMENT_ID=2 ORDER BY CREATED_DATE, SITTING_ID DESC;


SELECT TREATMENT_ID, TREATMENT_NAME,FEE FROM TREATMENTS WHERE TREATMENT_ID=1;

SELECT COUNT(1) FROM PATIENTS;

select * from sittings;

select p.patient_id, p.FIRST_NAME, P.LAST_NAME, A.ASSESMENT_ID,
A.PRESENT_CONDITION,S.TREATMENT,S.SITTING_ID, s.FEE, S.CREATED_DATE
FROM PATIENTS P LEFT JOIN ASSESMENTS A ON P.PATIENT_ID=A.PATIENT_ID
LEFT JOIN SITTINGS S ON A.ASSESMENT_ID=S.ASSESMENT_ID;

select S.CREATED_DATE, SUM(S.FEE)
FROM PATIENTS P LEFT JOIN ASSESMENTS A ON P.PATIENT_ID=A.PATIENT_ID
LEFT JOIN SITTINGS S ON A.ASSESMENT_ID=S.ASSESMENT_ID
WHERE S.CREATED_DATE IS NOT NULL
GROUP BY S.CREATED_DATE
ORDER BY S.CREATED_DATE DESC;

SELECT DISTINCT EXTRACT(MONTH FROM CREATED_DATE) FROM SITTINGS;


select S.CREATED_DATE, SUM(S.FEE)
FROM PATIENTS P LEFT JOIN ASSESMENTS A ON P.PATIENT_ID=A.PATIENT_ID
LEFT JOIN SITTINGS S ON A.ASSESMENT_ID=S.ASSESMENT_ID
WHERE S.CREATED_DATE IS NOT NULL and EXTRACT(YEAR FROM S.CREATED_DATE) = 2015
GROUP BY S.CREATED_DATE
ORDER BY S.CREATED_DATE DESC;

select S.CREATED_DATE, P.PATIENT_ID, P.FIRST_NAME, P.LAST_NAME, S.FEE
FROM PATIENTS P LEFT JOIN ASSESMENTS A ON P.PATIENT_ID=A.PATIENT_ID
LEFT JOIN SITTINGS S ON A.ASSESMENT_ID=S.ASSESMENT_ID
WHERE S.CREATED_DATE IS NOT NULL AND S.CREATED_DATE = '2016-08-20'
ORDER BY S.CREATED_DATE DESC;


-- script to cleanup tables
delete from sittings where sitting_id > 0;
delete from assesments where assesment_id > 0;
DELETE FROM physio.prescriptions where prescription_id > 0;
delete from patients where patient_id > 0;
delete from addresses where address_id > 0;


SELECT TREATMENT_ID, TREATMENT_NAME,FEE FROM TREATMENTS ORDER BY TREATMENT_ID;
